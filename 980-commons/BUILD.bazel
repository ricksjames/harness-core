load("//:tools/bazel/GenTestRules.bzl", "run_tests")
load("//:tools/bazel/macros.bzl", "run_analysis")
load("//:tools/bazel/harness.bzl", "harness_sign", "java_library")

java_library(
    name = "module",
    srcs = glob(["src/main/java/**/*.java"]),
    resource_jars = [
        "//990-commons-test:abstract-module",
        "//980-commons/src/main/proto:980_commons_java_proto",
    ],
    resources = [
        "//980-commons/src/main/resources:resource",
        "//980-commons/src/main/resources-filtered:resource",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//:lombok",
        "//980-commons/src/main/proto:980_commons_java_proto",
        "//999-annotations:module",
        "@maven//:ch_qos_logback_contrib_logback_jackson",
        "@maven//:ch_qos_logback_contrib_logback_json_classic",
        "@maven//:com_auth0_java_jwt",
        "@maven//:com_fasterxml_uuid_java_uuid_generator",
        "@maven//:com_github_ben_manes_caffeine_caffeine",
        "@maven//:com_github_reinert_jjschema",
        "@maven//:com_google_cloud_google_cloud_logging",
        "@maven//:com_google_cloud_google_cloud_secretmanager",
        "@maven//:com_google_code_findbugs_annotations",
        "@maven//:com_google_inject_guice",
        "@maven//:com_jayway_jsonpath_json_path",
        "@maven//:com_nimbusds_nimbus_jose_jwt",
        "@maven//:com_smoketurner_dropwizard_swagger",
        "@maven//:com_squareup_retrofit2_retrofit",
        "@maven//:commons_validator_commons_validator",
        "@maven//:de_javakaffee_kryo_serializers",
        "@maven//:io_prometheus_simpleclient_dropwizard",
        "@maven//:io_swagger_core_v3_swagger_annotations",
        "@maven//:net_jodah_failsafe",
        "@maven//:net_sf_json_lib_json_lib_jdk15",
        "@maven//:org_apache_commons_commons_csv",
        "@maven//:org_apache_commons_commons_jexl3",
        "@maven//:org_eclipse_jgit_org_eclipse_jgit_ssh_jsch",
        "@maven//:org_modelmapper_modelmapper",
        "@maven//:org_mongodb_morphia_morphia",
        "@maven//:org_springframework_data_spring_data_commons",
        "@maven//:org_zeroturnaround_zt_exec",
    ],
)

signed_jar = harness_sign(
    "//980-commons/src/test/resources:io/harness/security/non-signed.jar",
)

java_library(
    name = "tests",
    testonly = True,
    srcs = glob(["src/test/**/*.java"]),
    resources = [
        signed_jar,
        "//980-commons/src/test/resources:resource",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":module",
        "//:lombok",
        "//990-commons-test:module",
        "//999-annotations:module",
        "@maven//:com_auth0_java_jwt",
        "@maven//:com_fasterxml_jackson_core_jackson_annotations",
        "@maven//:com_fasterxml_jackson_core_jackson_core",
        "@maven//:com_fasterxml_jackson_core_jackson_databind",
        "@maven//:com_fasterxml_jackson_dataformat_jackson_dataformat_yaml",
        "@maven//:com_github_reinert_jjschema",
        "@maven//:com_google_code_findbugs_annotations",
        "@maven//:com_google_guava_guava",
        "@maven//:com_google_inject_guice",
        "@maven//:com_jayway_jsonpath_json_path",
        "@maven//:com_squareup_okhttp3_okhttp",
        "@maven//:com_squareup_retrofit2_retrofit",
        "@maven//:commons_collections_commons_collections",
        "@maven//:commons_io_commons_io",
        "@maven//:io_dropwizard_metrics_metrics_core",
        "@maven//:io_prometheus_simpleclient",
        "@maven//:javax_validation_validation_api",
        "@maven//:junit_junit",
        "@maven//:net_javacrumbs_json_unit_json_unit_fluent",
        "@maven//:org_apache_commons_commons_lang3",
        "@maven//:org_assertj_assertj_core",
        "@maven//:org_jooq_joor",
        "@maven//:org_mockito_mockito_core",
        "@maven//:org_mongodb_morphia_morphia",
        "@maven//:org_powermock_powermock_api_mockito",
        "@maven//:org_powermock_powermock_core",
        "@maven//:org_powermock_powermock_module_junit4",
        "@maven//:org_slf4j_slf4j_api",
    ],
)

run_tests()

run_analysis()
